@using GraduationProject.Models.ViewModel
@model ProfileListViewModel

@{
    ViewData["Title"] = "Профили";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-5 mt-5 mb-2">
        <button class="btn btn-outline-primary" id="sendFormButton">Расширенный поиск</button>
        <div id="form-table" class="form-table">
            @await Component.InvokeAsync("MenuSpecialization")
        </div>
    </div>
</div>

<div class="gridfalse">
    @{
        foreach (var profile in Model.getAllProfiles)
        {
            foreach (var user in Model.getUsers.Where(n => n.Id == profile.OwnerId))
            {
                <div class="profilecard">
                    <div class="card__top">
                        <a href="#" class="card__image">
                            <img src="/image/@profile.AvatarImg" alt="Name of Image" />
                        </a>
                    </div>
                    <!-- Нижняя часть -->
                    <div class="card__bottom">
                        <div class="card__prices">
                            <div class="card__price card__price--discount">@user.FirstName.ToString()</div>
                            <div class="card__price card__price--common fa-sharp fa-solid fa-star"> @profile.Rating
                            </div>
                        </div>
                        <div class="card__title">
                            Cпециализация >>> @profile.SpecProfile.Name
                        </div>
                        <a asp-area="" asp-controller="Comments" asp-action="Index"
                           asp-route-id="@profile.ProfileId"
                           type="button" class="card__add">Отзывы</a>
                        @if (User.IsInRole("customer"))
                        {
                            <a asp-area="" asp-controller="Response" asp-action="Create"
                               asp-route-id="@profile.ProfileId" asp-route-recId="@user.Id.ToString()"
                            type="button" class="card__add">Связаться</a>
                        }
                    </div>
                </div>
            }
        }
     }
</div>


<script>
    addEventListener("DOMContentLoaded", (event) => {
        const toggleForm = () => {
            const formTable = document.getElementById('form-table')

            if (!formTable) {
                return
            }
            formTable.classList.toggle('form-table_visible')
        }

        const sendFormButton = document.getElementById("sendFormButton")

        sendFormButton.addEventListener('click', () => {
            toggleForm()
        })
    });
</script>
